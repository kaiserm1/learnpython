"""
    The sequence of triangle numbers is generated by adding the natural numbers.
    So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first
    ten terms would be:

    1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

    Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28
    We can see that 28 is the first triangle number to have over five divisors.

    What is the value of the first triangle number to have over five hundred
    divisors?
"""

# while number of divisors <= target:
#     generate triangle numbers going up with summands and
#     check number of divisors

target = 4
number_of_divisors = 0
counter = 1
triangle_number = 1
divisor_list = []
while number_of_divisors <= target:
#    for i in range(1, counter):
#        triangle_number += i
    counter += 1
    for i in range(1, int(triangle_number / 2)):
        if triangle_number % i == 0:
            divisor_list.append(i)
    number_of_divisors = len(divisor_list)
    triangle_number += counter

print(triangle_number)
